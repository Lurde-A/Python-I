# Function to estimate insurance cost:
def estimate_insurance_cost(name, age, sex, bmi, num_of_children, smoker):
  estimated_cost = 250*age - 128*sex + 370*bmi + 425*num_of_children + 24000*smoker - 12500
  print(name + "'s Estimated Insurance Cost: " + str(estimated_cost) + " dollars.")
  return estimated_cost
 
# Estimate Maria's insurance cost
maria_insurance_cost = estimate_insurance_cost(name = "Maria", age = 31, sex = 0, bmi = 23.1, num_of_children = 1, smoker = 0)

# Estimate Rohan's insurance cost
rohan_insurance_cost = estimate_insurance_cost(name = 
"Rohan", age = 25, sex = 1, bmi = 28.5, num_of_children = 3, smoker = 0)

# Estimate Valentina's insurance cost
valentina_insurance_cost = estimate_insurance_cost(name = "Valentina", age = 53, sex = 0, bmi = 31.4, num_of_children = 0, smoker = 1)

1. Estimated insurance costs for three individuals – Maria, Rohan, and Valentina:
//
Maria's Estimated Insurance Cost: 4222.0 dollars.
Rohan's Estimated Insurance Cost: 5442.0 dollars.
Valentina's Estimated Insurance Cost: 36368.0 dollars. 

2. We want to compare the estimated insurance costs (as calculated by our function) to the actual amounts that Maria, Rohan, and Valentina paid.
Create a list called names and fill it with the names of the individuals you are estimating insurance costs for:
    "Maria"
    "Rohan"
    "Valentina"
//
names=["Maria", "Rohan", "Valentina"]

3. Next, create a list called insurance_costs and fill it with the actual amounts that Maria, Rohan, and Valentina paid for insurance:
    4150.0
    5320.0
    35210.0
//
insurance_costs=[4150.0, 5320.0, 35210.0]

4. Currently the names and insurance_costs lists are separate, but we want each name to be paired with an insurance cost. Create a new variable called insurance_data that 
combines names and insurance_costs using the zip() function. Print this new variable.
//
insurance_data=zip(names, insurance_costs)
print(insurance_data)

5. This output does not mean much to us. To change it to a format we can actually understand, we must convert the zip object to a list by doing the following:
        list(zip(____, ____))
Convert the insurance_data object to a list using this method. Click “Save” to see the result –  you should now see a list of names and insurance costs.
//
insurance_data=zip(names, insurance_costs)
print(insurance_data)
insurance_data=list(zip(names, insurance_costs))
print(insurance_data)

6. Next, create an empty list called estimated_insurance_data. This is the list we’ll use to store the estimated insurance costs for our three individuals.
//
estimated_insurance_data=[]

7. Use .append() to add ("Maria", maria_insurance_cost) to estimated_insurance_data. Do the same for Rohan and Valentina.
//
estimated_insurance_data.append(("Maria", maria_insurance_cost))
estimated_insurance_data.append(("Rohan", rohan_insurance_cost))
estimated_insurance_data.append(("Valentina", valentina_insurance_cost))

8. In the output, you should see two lists. The first one represents the actual insurance cost data and the second one represents the estimated insurance cost data.
However, it’s difficult to know this just by looking at the output. As a data scientist, you want to make sure that your data is clean and easy to understand.
Add to the print statement for insurance_data so that it’s clear what the list contains. The output of the print statement should look like: Here is the actual insurance cost data: [...list output...]
//
print("Here is the actual insurance cost data: " + str(insurance_data))

9. Do the same for the print statement that prints estimated_insurance_data. The output should look like: Here is the estimated insurance cost data: [...list output...]
//
print("Here is the actual insurance cost data: " + str(estimated_insurance_data))

10. You may notice that there are differences between the actual insurance costs and estimated insurance costs. This means that our estimate_insurance_cost() function does not calculate insurance costs with 100% accuracy.
Compare the estimated insurance data to the actual insurance data. Do the estimated insurance costs seem to be overestimated or underestimated?
//
Overestimated

EXTRA 11. Calculate the difference between the actual insurance cost data and the estimated insurance cost data for each individual, and store the results in a list called 
insurance_cost_difference.
//
insurance_cost_difference = [["Maria", 4222.0-4150.0], ["Rohan", 5442.0-5320.0], ["Valentina", 36368.0-35210.0]]
print(insurance_cost_difference)

12. Estimate the insurance cost for a new individual, Akira, who is a 19 year-old male non-smoker with no children and a BMI of 27.1. 
Make sure to append his name to names and his actual insurance cost, 2930.0, to insurance_costs.
//

