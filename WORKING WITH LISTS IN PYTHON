                                    ADDING BY INDEX: INSERT
  1. Jiho, the store owner, likes to store the items for the display in a list: ['Mango', 'Filet Mignon', 'Chocolate Milk']
Jiho would like to put "Pineapple" in the front of the list so it is the first item customers see in the display window. Use .insert() to add "Pineapple" to the front of the list.
Print the resulting list to see the change.
//
front_display_list.insert(0,"Pineapple")
print(front_display_list)

                                    ADDING BY INDEX: POP
  2. Check out the current list of topics we will be studying in our code editor.: data_science_topics = ["Machine Learning", "SQL", "Pandas", "Algorithms", "Statistics", "Python 3"]
It looks like we have an overlap with our computer science curriculum for the topic of "Python 3". Let’s remove the topic from the list of data_science_topics using our newly learned .pop() method.
Print data_science_topics to see your result.
//
data_science_topics.pop()
print(data_science_topics)

  3. Looks like there is overlap on the "Algorithms" topic as well. Let’s use .pop() to remove it as well. Print data_science_topics to see the changes.
//
data_science_topics.pop(3)
print(data_science_topics)

                                    CONSECUTIVE LISTS: RANGE
  4.1 Modify number_list so that it is a range containing numbers starting at 0 and up to, but not including, 9.
//
number_list = range(9)
print(list(number_list))
  4.2 Create a range called zero_to_seven with the numbers 0 through 7. Print the result in list form.
//
zero_to_seven = range(8)
print(list(zero_to_seven))

                                    THE POWER OF RANGE!
  5.1 Modify the range() function that created the range range_five_three such that it: Starts at 5, Has a difference of 3 between each item, Ends before 15
//
range_five_three = range(5, 15, 3)
  5.2 Create a range called range_diff_five that: Starts at 0, Has a difference of 5 between each item, Ends before 40
//
range_diff_five = range(0, 40, 5)

                                    LENGTH
  6.1 Calculate the length of long_list and save it to the variable long_list_len.
long_list = [1, 5, 6, 7, -23, 69.5, True, "very", "long", "list", "that", "keeps", "going.", "Let's", "practice", "getting", "the", "length"]
big_range = range(2, 3000, 10)
  6.2 Use print() to examine long_list_len.
//
long_list_len = len(long_list)
print(long_list_len)
  6.3 We have provided a completed range() function for the variable big_range: big_range = range(2, 3000, 10).
Calculate its length using the function len() and save it to a variable called big_range_length.
Note: Range objects do not need to be converted to lists in order to determine their length
  6.4 Use print() to examine big_range_length
//
big_range_length = len(big_range)
print(big_range_length)
  6.5 Change the range() function that generates big_range so that it skips 100 instead of 10 steps between items. How does this change big_range_length?
//
big_range = range(2, 3000, 100)
ANSWER: It lowered the length of the list by 10 - 30. 

                                    SLICING LISTS I
  7.1 suitcase = ["shirt", "shirt", "pants", "pants", "pajamas", "books"]
      beginning = suitcase[0:4]
Use print() to examine the variable beginning. Before hitting Run think about what elements beginning will contain?
//
The list will contain all elements apart from the "books".
print(beginning)
  7.2 Modify beginning, so that it selects the first 2 elements of suitcase.
//
beginning = suitcase[0:2]
  7.3 Create a new list called middle that contains the middle two items ( ["pants", "pants"] ) from suitcase. Print middle to see the slice!
//
middle = suitcase [2:4]
